{"ast":null,"code":"var _jsxFileName = \"/home/marygrace/repos/cv-project/src/components/Work.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Work extends Component {\n  constructor(props) {\n    super(props);\n\n    this.registerWorkedAsChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        workedas: e.target.value\n      });\n    };\n\n    this.registerStartDateChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        startdate: e.target.value\n      });\n    };\n\n    this.registerFinishDateChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        finishdate: e.target.value\n      });\n    };\n\n    this.saveWork = e => {\n      /*\n      const workedAsVisualizer = e.target.parentElement.parentElement.nextSibling.firstChild\n      const startDateVisualizer = e.target.parentElement.parentElement.nextSibling.firstChild.nextSibling\n      const finishDateVisualizer = e.target.parentElement.parentElement.nextSibling.firstChild.nextSibling.nextSibling\n      \n      console.log(workedAsVisualizer, startDateVisualizer, finishDateVisualizer)\n      */\n      if (this.state.workedas !== \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\") {\n        /*\n        workedAsVisualizer.textContent = this.state.workedas\n        workedAsVisualizer.style.cssText = \"color:black\"\n        startDateVisualizer.textContent = \"Start date: \" + this.state.startdate\n        startDateVisualizer.style.cssText = \"color:black\"\n        finishDateVisualizer.textContent = \"Finish date: \" + this.state.finishdate\n        finishDateVisualizer.style.cssText = \"color:black\"\n        */\n        let workPlaceName = document.createElement(\"h3\");\n        workPlaceName.textContent = \"Work experience: \" + this.state.workedas;\n        let startDateWork = document.createElement(\"p\");\n        startDateWork.textContent = \"Start date: \" + this.state.startdate;\n        let finishDateWork = document.createElement(\"p\");\n        finishDateWork.textContent = \"End date: \" + this.state.finishdate;\n        let deleteWorkExperienceBtn = document.createElement(\"button\");\n        deleteWorkExperienceBtn.textContent = \"Delete\";\n        const visualizer = document.querySelector(\".workExperienceVisualizer\");\n        visualizer.append(workPlaceName, startDateWork, finishDateWork, deleteWorkExperienceBtn);\n        console.log(visualizer);\n        this.setState({\n          workedas: \"\",\n          startdate: \"\",\n          finishdate: \"\",\n          counter: this.counter++\n        });\n        console.log(this.state.counter);\n      } else if (this.state.workedas === \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\") {\n        alert(\"The work description is missing\");\n      } else if (this.state.workedas === \"\" && this.state.startdate === \"\" && this.state.finishdate !== \"\") {\n        alert(\"The work description and start date are missing\");\n      } else if (this.state.workedas === \"\" && this.state.startdate === \"\" && this.state.finishdate === \"\") {\n        alert(\"The work description, start date and end date are missing\");\n      } else if (this.state.workedas !== \"\" && this.state.startdate === \"\" && this.state.finishdate === \"\") {\n        alert(\"The start date and end date are missing\");\n      } else if (this.state.workedas === \"\" && this.state.startdate !== \"\" && this.state.finishdate === \"\") {\n        alert(\"The work description and end date are missing\");\n      }\n    };\n\n    this.state = {\n      workedas: \"\",\n      startdate: \"\",\n      finishdate: \"\",\n      counter: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workExperience\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workedasDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"workedas\",\n            children: \"Worked as:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.workedas,\n            onChange: this.registerWorkedAsChange,\n            type: \"text\",\n            id: \"workedas\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"startDateDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.startdate,\n            onChange: this.registerStartDateChange,\n            type: \"date\",\n            id: \"startDate\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"finishDateDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"finishDate\",\n            children: \"Finish date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.finishdate,\n            onChange: this.registerFinishDateChange,\n            type: \"date\",\n            id: \"finishDate\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submitButtonDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.saveWork,\n            type: \"button\",\n            id: \"submitWorkBtn\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workExperienceVisualizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/marygrace/repos/cv-project/src/components/Work.js"],"names":["React","Component","Work","constructor","props","registerWorkedAsChange","e","console","log","target","value","setState","workedas","registerStartDateChange","startdate","registerFinishDateChange","finishdate","saveWork","state","workPlaceName","document","createElement","textContent","startDateWork","finishDateWork","deleteWorkExperienceBtn","visualizer","querySelector","append","counter","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Work extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workedas: \"\",\n      startdate: \"\",\n      finishdate: \"\",\n      counter: 0\n    };\n   \n  }\n\n  registerWorkedAsChange = (e) =>{\n    console.log(e.target.value)\n    this.setState({\n      workedas: e.target.value\n    })\n  }\n\n  registerStartDateChange = (e) =>{\n    console.log(e.target.value)\n    this.setState({\n      startdate: e.target.value\n    })\n  }\n\n  registerFinishDateChange = (e) =>{\n    console.log(e.target.value)\n    this.setState({\n      finishdate: e.target.value\n    })\n  }\n\n  saveWork = (e) =>{\n    /*\n    const workedAsVisualizer = e.target.parentElement.parentElement.nextSibling.firstChild\n    const startDateVisualizer = e.target.parentElement.parentElement.nextSibling.firstChild.nextSibling\n    const finishDateVisualizer = e.target.parentElement.parentElement.nextSibling.firstChild.nextSibling.nextSibling\n    \n  console.log(workedAsVisualizer, startDateVisualizer, finishDateVisualizer)\n  */\n  if (this.state.workedas !== \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\"){\n    /*\n    workedAsVisualizer.textContent = this.state.workedas\n    workedAsVisualizer.style.cssText = \"color:black\"\n    startDateVisualizer.textContent = \"Start date: \" + this.state.startdate\n    startDateVisualizer.style.cssText = \"color:black\"\n    finishDateVisualizer.textContent = \"Finish date: \" + this.state.finishdate\n    finishDateVisualizer.style.cssText = \"color:black\"\n    */\n   let workPlaceName = document.createElement(\"h3\")\n   workPlaceName.textContent = \"Work experience: \" + this.state.workedas\n   let startDateWork = document.createElement(\"p\")\n   startDateWork.textContent = \"Start date: \" + this.state.startdate\n   let finishDateWork = document.createElement(\"p\")\n   finishDateWork.textContent = \"End date: \" + this.state.finishdate\n   let deleteWorkExperienceBtn = document.createElement(\"button\")\n   deleteWorkExperienceBtn.textContent = \"Delete\"\n   const visualizer = document.querySelector(\".workExperienceVisualizer\")\n   visualizer.append(workPlaceName, startDateWork, finishDateWork, deleteWorkExperienceBtn)\n   console.log(visualizer)   \n   this.setState({\n     workedas: \"\",\n     startdate: \"\",\n     finishdate: \"\",\n     counter: this.counter++\n   })\n   console.log(this.state.counter)\n  } \n  else if (this.state.workedas === \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\"){\n   alert(\"The work description is missing\")\n  } else if (this.state.workedas === \"\" && this.state.startdate === \"\" && this.state.finishdate !== \"\"){\n   alert(\"The work description and start date are missing\")\n  } else if (this.state.workedas === \"\" && this.state.startdate === \"\" && this.state.finishdate === \"\"){\n    alert(\"The work description, start date and end date are missing\")\n  } else if (this.state.workedas !== \"\" && this.state.startdate === \"\" && this.state.finishdate === \"\"){\n    alert(\"The start date and end date are missing\")\n  } else if (this.state.workedas === \"\" && this.state.startdate !== \"\" && this.state.finishdate === \"\"){\n    alert(\"The work description and end date are missing\")\n  } \n  \n}\n  \n\n\n  \n\n  render() {\n    return (\n      <div className='workExperience'>\n        <div className='workForm'>\n\n          <div className='workedasDiv'>\n          <label htmlFor='workedas'>Worked as:</label>\n          <input value={this.state.workedas} onChange={this.registerWorkedAsChange} type=\"text\" id=\"workedas\" required/>\n          </div>\n          \n          <div className='startDateDiv'>\n          <label htmlFor='startDate'>Start date:</label>\n          <input value={this.state.startdate} onChange={this.registerStartDateChange} type=\"date\" id=\"startDate\" required/>\n          </div>\n         \n         <div className='finishDateDiv'>\n         <label htmlFor='finishDate'>Finish date:</label>\n          <input value={this.state.finishdate} onChange={this.registerFinishDateChange} type=\"date\" id=\"finishDate\" required/>\n         </div>\n\n         <div className='submitButtonDiv'>\n           <button onClick={this.saveWork} type='button' id='submitWorkBtn'>Save</button>\n         </div>\n          \n        </div>\n        <div className='workExperienceVisualizer'>\n          \n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}