{"ast":null,"code":"var _jsxFileName = \"/home/marygrace/repos/cv-project/src/components/Education.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Education extends Component {\n  constructor(props) {\n    super(props);\n\n    this.registerschoolnameChange = e => {\n      this.setState({\n        schoolname: e.target.value\n      });\n    };\n\n    this.registerStartDateChange = e => {\n      this.setState({\n        startdate: e.target.value\n      });\n    };\n\n    this.registerFinishDateChange = e => {\n      this.setState({\n        finishdate: e.target.value\n      });\n    };\n\n    this.saveSchool = e => {\n      if (this.state.schoolname !== \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\" && this.state.counter < 2) {\n        let workExperienceContainer = document.createElement(\"div\");\n        workExperienceContainer.className = `work${this.state.counter}`;\n        let workPlaceName = document.createElement(\"h3\");\n        workPlaceName.textContent = this.state.schoolname;\n        let startDateWork = document.createElement(\"p\");\n        startDateWork.textContent = \"Start date: \" + this.state.startdate;\n        let finishDateWork = document.createElement(\"p\");\n        finishDateWork.textContent = \"End date: \" + this.state.finishdate;\n        let deleteSchoolExperienceBtn = document.createElement(\"button\");\n        deleteSchoolExperienceBtn.textContent = \"Delete\";\n        deleteSchoolExperienceBtn.className = \"deleteSchoolExperienceBtn\";\n        deleteSchoolExperienceBtn.onclick = this.deleteSchoolExperience;\n        const visualizer = document.querySelector(\".schoolNamevisualizer\");\n        workExperienceContainer.append(workPlaceName, startDateWork, finishDateWork, deleteSchoolExperienceBtn);\n        visualizer.append(workExperienceContainer);\n        this.setState({\n          schoolname: \"\",\n          startdate: \"\",\n          finishdate: \"\",\n          counter: this.state.counter + 1\n        });\n        console.log(this.state.counter);\n      } else if (this.state.schoolname === \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\") {\n        alert(\"The work description is missing\");\n      } else if (this.state.schoolname === \"\" && this.state.startdate === \"\" && this.state.finishdate !== \"\") {\n        alert(\"The work description and start date are missing\");\n      } else if (this.state.schoolname === \"\" && this.state.startdate === \"\" && this.state.finishdate === \"\") {\n        alert(\"The work description, start date and end date are missing\");\n      } else if (this.state.schoolname !== \"\" && this.state.startdate === \"\" && this.state.finishdate === \"\") {\n        alert(\"The start date and end date are missing\");\n      } else if (this.state.schoolname === \"\" && this.state.startdate !== \"\" && this.state.finishdate === \"\") {\n        alert(\"The work description and end date are missing\");\n      }\n\n      if (this.state.schoolname !== \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\" && this.state.counter >= 2) {\n        alert(\"You can insert max 2 work experiences\");\n      }\n    };\n\n    this.deleteSchoolExperience = e => {\n      e.target.parentElement.remove();\n      this.setState({\n        counter: this.state.counter - 1\n      });\n    };\n\n    this.state = {\n      schoolname: \"\",\n      startdate: \"\",\n      finishdate: \"\",\n      counter: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workExperience\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schoolnameDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"schoolname\",\n            children: \"School name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.schoolname,\n            onChange: this.registerschoolnameChange,\n            type: \"text\",\n            id: \"schoolname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"startDateDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.startdate,\n            onChange: this.registerStartDateChange,\n            type: \"date\",\n            id: \"startDate\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"finishDateDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"finishDate\",\n            children: \"Finish date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.finishdate,\n            onChange: this.registerFinishDateChange,\n            type: \"date\",\n            id: \"finishDate\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submitButtonDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.saveSchool,\n            type: \"button\",\n            id: \"submitWorkBtn\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schoolNamevisualizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/marygrace/repos/cv-project/src/components/Education.js"],"names":["React","Component","Education","constructor","props","registerschoolnameChange","e","setState","schoolname","target","value","registerStartDateChange","startdate","registerFinishDateChange","finishdate","saveSchool","state","counter","workExperienceContainer","document","createElement","className","workPlaceName","textContent","startDateWork","finishDateWork","deleteSchoolExperienceBtn","onclick","deleteSchoolExperience","visualizer","querySelector","append","console","log","alert","parentElement","remove","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC/CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,wBAXmB,GAWSC,CAAD,IAAM;AAE/B,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEF,CAAC,CAACG,MAAF,CAASC;AADT,OAAd;AAGD,KAhBkB;;AAAA,SAkBnBC,uBAlBmB,GAkBQL,CAAD,IAAM;AAE9B,WAAKC,QAAL,CAAc;AACZK,QAAAA,SAAS,EAAEN,CAAC,CAACG,MAAF,CAASC;AADR,OAAd;AAGD,KAvBkB;;AAAA,SAyBnBG,wBAzBmB,GAyBSP,CAAD,IAAM;AAE/B,WAAKC,QAAL,CAAc;AACZO,QAAAA,UAAU,EAAER,CAAC,CAACG,MAAF,CAASC;AADT,OAAd;AAGD,KA9BkB;;AAAA,SAgCnBK,UAhCmB,GAgCLT,CAAD,IAAM;AAEnB,UAAI,KAAKU,KAAL,CAAWR,UAAX,KAA0B,EAA1B,IAAgC,KAAKQ,KAAL,CAAWJ,SAAX,KAAyB,EAAzD,IAA+D,KAAKI,KAAL,CAAWF,UAAX,KAA0B,EAAzF,IAA+F,KAAKE,KAAL,CAAWC,OAAX,GAAqB,CAAxH,EAA0H;AAEzH,YAAIC,uBAAuB,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAA9B;AACAF,QAAAA,uBAAuB,CAACG,SAAxB,GAAqC,OAAM,KAAKL,KAAL,CAAWC,OAAQ,EAA9D;AACA,YAAIK,aAAa,GAAGH,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAApB;AACAE,QAAAA,aAAa,CAACC,WAAd,GAA4B,KAAKP,KAAL,CAAWR,UAAvC;AACA,YAAIgB,aAAa,GAAGL,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAApB;AACAI,QAAAA,aAAa,CAACD,WAAd,GAA4B,iBAAiB,KAAKP,KAAL,CAAWJ,SAAxD;AACA,YAAIa,cAAc,GAAGN,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAArB;AACAK,QAAAA,cAAc,CAACF,WAAf,GAA6B,eAAe,KAAKP,KAAL,CAAWF,UAAvD;AACA,YAAIY,yBAAyB,GAAGP,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhC;AACAM,QAAAA,yBAAyB,CAACH,WAA1B,GAAwC,QAAxC;AACAG,QAAAA,yBAAyB,CAACL,SAA1B,GAAsC,2BAAtC;AACAK,QAAAA,yBAAyB,CAACC,OAA1B,GAAoC,KAAKC,sBAAzC;AACA,cAAMC,UAAU,GAAGV,QAAQ,CAACW,aAAT,CAAuB,uBAAvB,CAAnB;AACAZ,QAAAA,uBAAuB,CAACa,MAAxB,CAA+BT,aAA/B,EAA8CE,aAA9C,EAA6DC,cAA7D,EAA6EC,yBAA7E;AACAG,QAAAA,UAAU,CAACE,MAAX,CAAkBb,uBAAlB;AAEA,aAAKX,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAE,EADA;AAEZI,UAAAA,SAAS,EAAE,EAFC;AAGZE,UAAAA,UAAU,EAAE,EAHA;AAIZG,UAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAJlB,SAAd;AAMAe,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,OAAvB;AAEA,OA1BD,MA2BK,IAAI,KAAKD,KAAL,CAAWR,UAAX,KAA0B,EAA1B,IAAgC,KAAKQ,KAAL,CAAWJ,SAAX,KAAyB,EAAzD,IAA+D,KAAKI,KAAL,CAAWF,UAAX,KAA0B,EAA7F,EAAgG;AACpGoB,QAAAA,KAAK,CAAC,iCAAD,CAAL;AACA,OAFI,MAEE,IAAI,KAAKlB,KAAL,CAAWR,UAAX,KAA0B,EAA1B,IAAgC,KAAKQ,KAAL,CAAWJ,SAAX,KAAyB,EAAzD,IAA+D,KAAKI,KAAL,CAAWF,UAAX,KAA0B,EAA7F,EAAgG;AACtGoB,QAAAA,KAAK,CAAC,iDAAD,CAAL;AACA,OAFM,MAEA,IAAI,KAAKlB,KAAL,CAAWR,UAAX,KAA0B,EAA1B,IAAgC,KAAKQ,KAAL,CAAWJ,SAAX,KAAyB,EAAzD,IAA+D,KAAKI,KAAL,CAAWF,UAAX,KAA0B,EAA7F,EAAgG;AACrGoB,QAAAA,KAAK,CAAC,2DAAD,CAAL;AACD,OAFM,MAEA,IAAI,KAAKlB,KAAL,CAAWR,UAAX,KAA0B,EAA1B,IAAgC,KAAKQ,KAAL,CAAWJ,SAAX,KAAyB,EAAzD,IAA+D,KAAKI,KAAL,CAAWF,UAAX,KAA0B,EAA7F,EAAgG;AACrGoB,QAAAA,KAAK,CAAC,yCAAD,CAAL;AACD,OAFM,MAEA,IAAI,KAAKlB,KAAL,CAAWR,UAAX,KAA0B,EAA1B,IAAgC,KAAKQ,KAAL,CAAWJ,SAAX,KAAyB,EAAzD,IAA+D,KAAKI,KAAL,CAAWF,UAAX,KAA0B,EAA7F,EAAgG;AACrGoB,QAAAA,KAAK,CAAC,+CAAD,CAAL;AACD;;AACD,UAAI,KAAKlB,KAAL,CAAWR,UAAX,KAA0B,EAA1B,IAAgC,KAAKQ,KAAL,CAAWJ,SAAX,KAAyB,EAAzD,IAA+D,KAAKI,KAAL,CAAWF,UAAX,KAA0B,EAAzF,IAA+F,KAAKE,KAAL,CAAWC,OAAX,IAAqB,CAAxH,EAA0H;AACxHiB,QAAAA,KAAK,CAAC,uCAAD,CAAL;AACD;AACF,KA3EoB;;AAAA,SA8ErBN,sBA9EqB,GA8EKtB,CAAD,IAAM;AAC7BA,MAAAA,CAAC,CAACG,MAAF,CAAS0B,aAAT,CAAuBC,MAAvB;AACA,WAAK7B,QAAL,CAAc;AACZU,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AADlB,OAAd;AAGD,KAnFoB;;AAEjB,SAAKD,KAAL,GAAa;AACXR,MAAAA,UAAU,EAAE,EADD;AAEXI,MAAAA,SAAS,EAAE,EAFA;AAGXE,MAAAA,UAAU,EAAE,EAHD;AAIXG,MAAAA,OAAO,EAAE;AAJE,KAAb;AAOD;;AA8EDoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAO,YAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWR,UAAzB;AAAqC,YAAA,QAAQ,EAAE,KAAKH,wBAApD;AAA8E,YAAA,IAAI,EAAC,MAAnF;AAA0F,YAAA,EAAE,EAAC,YAA7F;AAA0G,YAAA,QAAQ;AAAlH;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAO,YAAA,KAAK,EAAE,KAAKW,KAAL,CAAWJ,SAAzB;AAAoC,YAAA,QAAQ,EAAE,KAAKD,uBAAnD;AAA4E,YAAA,IAAI,EAAC,MAAjF;AAAwF,YAAA,EAAE,EAAC,WAA3F;AAAuG,YAAA,QAAQ;AAA/G;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAYC;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEC;AAAO,YAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,UAAzB;AAAqC,YAAA,QAAQ,EAAE,KAAKD,wBAApD;AAA8E,YAAA,IAAI,EAAC,MAAnF;AAA0F,YAAA,EAAE,EAAC,YAA7F;AAA0G,YAAA,QAAQ;AAAlH;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZD,eAiBC;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAE,KAAKE,UAAtB;AAAkC,YAAA,IAAI,EAAC,QAAvC;AAAgD,YAAA,EAAE,EAAC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAtH8C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Education extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      schoolname: \"\",\n      startdate: \"\",\n      finishdate: \"\",\n      counter: 0\n    };\n   \n  }\n\n  registerschoolnameChange = (e) =>{\n    \n    this.setState({\n      schoolname: e.target.value\n    })\n  }\n\n  registerStartDateChange = (e) =>{\n \n    this.setState({\n      startdate: e.target.value\n    })\n  }\n\n  registerFinishDateChange = (e) =>{\n  \n    this.setState({\n      finishdate: e.target.value\n    })\n  }\n\n  saveSchool = (e) =>{\n \n  if (this.state.schoolname !== \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\" && this.state.counter < 2){\n\n   let workExperienceContainer = document.createElement(\"div\")\n   workExperienceContainer.className = `work${this.state.counter}`\n   let workPlaceName = document.createElement(\"h3\")\n   workPlaceName.textContent = this.state.schoolname\n   let startDateWork = document.createElement(\"p\")\n   startDateWork.textContent = \"Start date: \" + this.state.startdate\n   let finishDateWork = document.createElement(\"p\")\n   finishDateWork.textContent = \"End date: \" + this.state.finishdate\n   let deleteSchoolExperienceBtn = document.createElement(\"button\")\n   deleteSchoolExperienceBtn.textContent = \"Delete\"\n   deleteSchoolExperienceBtn.className = \"deleteSchoolExperienceBtn\"\n   deleteSchoolExperienceBtn.onclick = this.deleteSchoolExperience\n   const visualizer = document.querySelector(\".schoolNamevisualizer\")\n   workExperienceContainer.append(workPlaceName, startDateWork, finishDateWork, deleteSchoolExperienceBtn)\n   visualizer.append(workExperienceContainer)\n   \n   this.setState({\n     schoolname: \"\",\n     startdate: \"\",\n     finishdate: \"\",\n     counter: this.state.counter + 1\n   })\n   console.log(this.state.counter)\n   \n  } \n  else if (this.state.schoolname === \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\"){\n   alert(\"The work description is missing\")\n  } else if (this.state.schoolname === \"\" && this.state.startdate === \"\" && this.state.finishdate !== \"\"){\n   alert(\"The work description and start date are missing\")\n  } else if (this.state.schoolname === \"\" && this.state.startdate === \"\" && this.state.finishdate === \"\"){\n    alert(\"The work description, start date and end date are missing\")\n  } else if (this.state.schoolname !== \"\" && this.state.startdate === \"\" && this.state.finishdate === \"\"){\n    alert(\"The start date and end date are missing\")\n  } else if (this.state.schoolname === \"\" && this.state.startdate !== \"\" && this.state.finishdate === \"\"){\n    alert(\"The work description and end date are missing\")\n  } \n  if (this.state.schoolname !== \"\" && this.state.startdate !== \"\" && this.state.finishdate !== \"\" && this.state.counter>= 2){\n    alert(\"You can insert max 2 work experiences\")\n  }\n}\n  \n\ndeleteSchoolExperience = (e) =>{\n  e.target.parentElement.remove()\n  this.setState({\n    counter: this.state.counter - 1\n  })\n}\n\n  \n\n  render() {\n    return (\n      <div className='workExperience'>\n        <div className='workForm'>\n\n          <div className='schoolnameDiv'>\n          <label htmlFor='schoolname'>School name:</label>\n          <input value={this.state.schoolname} onChange={this.registerschoolnameChange} type=\"text\" id=\"schoolname\" required/>\n          </div>\n          \n          <div className='startDateDiv'>\n          <label htmlFor='startDate'>Start date:</label>\n          <input value={this.state.startdate} onChange={this.registerStartDateChange} type=\"date\" id=\"startDate\" required/>\n          </div>\n         \n         <div className='finishDateDiv'>\n         <label htmlFor='finishDate'>Finish date:</label>\n          <input value={this.state.finishdate} onChange={this.registerFinishDateChange} type=\"date\" id=\"finishDate\" required/>\n         </div>\n\n         <div className='submitButtonDiv'>\n           <button onClick={this.saveSchool} type='button' id='submitWorkBtn'>Save</button>\n         </div>\n          \n        </div>\n        <div  className='schoolNamevisualizer'>\n          \n        </div>\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}